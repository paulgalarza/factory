{
  "name": "johnny-five",
  "description": "The JavaScript Hardware Programming Framework. Use with: Arduino (all models), Electric Imp, Beagle Bone, Intel Galileo & Edison, Linino One, Pinoccio, Raspberry Pi, Spark Core, TI Launchpad and more!",
  "version": "0.8.62",
  "homepage": "https://github.com/rwaldron/johnny-five",
  "author": {
    "name": "Rick Waldron",
    "email": "waldron.rick@gmail.com"
  },
  "contributors": [
    {
      "name": "Adam Hyland",
      "email": "<protonk@gmail.com"
    },
    {
      "name": "Andreas Haugstrup Pedersen",
      "email": "<haugstrup@podio.com"
    },
    {
      "name": "Andrew Homeyer",
      "email": "<homeyer@gmail.com"
    },
    {
      "name": "Ben Gillies",
      "email": "<bengillies@gmail.com"
    },
    {
      "name": "Carl Danley",
      "email": "<carldanley@gmail.com"
    },
    {
      "name": "Chris Williams",
      "email": "<chris@saferaging.com"
    },
    {
      "name": "Colin Vernon",
      "email": "<colin@littlebits.cc"
    },
    {
      "name": "Corey Daniels",
      "email": "<corey@skookum.com"
    },
    {
      "name": "FotoVerite",
      "email": "<mzbphoto@gmail.com"
    },
    {
      "name": "Francis Gulotta",
      "email": "<wizard@roborooter.com"
    },
    {
      "name": "Irene Ros",
      "email": "<irene@bocoup.com"
    },
    {
      "name": "Jonathan Beri",
      "email": "<jmberi@gmail.com"
    },
    {
      "name": "Julian Gautier",
      "email": "<julian.gautier@alumni.neumont.edu"
    },
    {
      "name": "Linus Larsson",
      "email": "<linus@devshm.net"
    },
    {
      "name": "Mike Breen",
      "email": "<hardbap@gmail.com"
    },
    {
      "name": "Mike Harsch",
      "email": "<mike@harschsystems.com"
    },
    {
      "name": "Mike Sherov",
      "email": "<mike.sherov@gmail.com"
    },
    {
      "name": "Paul Tagliamonte",
      "email": "<paultag@sunlightfoundation.com"
    },
    {
      "name": "Rahul Ravikumar",
      "email": "<rahulrav@a2z.com"
    },
    {
      "name": "Randall A. Gordon",
      "email": "<randall@randallagordon.com"
    },
    {
      "name": "Rebecca Murphey",
      "email": "<rmurphey@gmail.com"
    },
    {
      "name": "Ryan Neufeld",
      "email": "<ryan@neucode.org"
    },
    {
      "name": "Scott González",
      "email": "<scott.gonzalez@gmail.com"
    },
    {
      "name": "Swift",
      "email": "<theycallmeswift@gmail.com"
    },
    {
      "name": "Travis Thieman",
      "email": "<travis.thieman@gmail.com"
    },
    {
      "name": "Vincent Agnano",
      "email": "<vincent.agnano@scopyleft.fr"
    },
    {
      "name": "Cole",
      "email": "<mcg42387@gmail.com"
    },
    {
      "name": "Divan Visagie",
      "email": "<visagiedivan@gmail.com"
    },
    {
      "name": "Sara Gorecki",
      "email": "<sgorecki@gmail.com"
    },
    {
      "name": "Raquel Velez",
      "email": "<rockbot01@gmail.com"
    },
    {
      "name": "Tim Walker",
      "email": "<tim.twalker@gmail.com"
    },
    {
      "name": "Toby Miller",
      "email": "<tmiller@localhost.localhost"
    },
    {
      "name": "Richard Key",
      "email": "<rich@busyrich.com"
    },
    {
      "name": "Patrick Clark",
      "email": "<pat@hellop.at"
    },
    {
      "name": "Boros Márton",
      "email": "<martonboros@gmail.com"
    },
    {
      "name": "Jeremy Morrell",
      "email": "<morrell.jeremy@gmail.com"
    },
    {
      "name": "Bob Holt",
      "email": "<bobholt@gmail.com"
    },
    {
      "name": "Dwayn Matthies",
      "email": "<dwayn.matthies@gmail.com"
    },
    {
      "name": "AJ Fisher",
      "email": "<ajfisher.td@gmail.com"
    },
    {
      "name": "Julian Duque",
      "email": "<julianduquej@gmail.com"
    },
    {
      "name": "Daan van Berkel",
      "email": "<daan.v.berkel.1980@gmail.com"
    },
    {
      "name": "Oli Evans",
      "email": "<oli@zilla.org.uk"
    },
    {
      "name": "Cory Gackenheimer",
      "email": "<cory.gack@gmail.com"
    },
    {
      "name": "Ray Pierce",
      "email": "<ray@digitalpierce.com"
    },
    {
      "name": "Jonathan Clem",
      "email": "<jonathan@jclem.net"
    },
    {
      "name": "achingbrain",
      "email": "<alex@achingbrain.net"
    },
    {
      "name": "Jeff Albrecht",
      "email": "<jeffa@iea-software.com"
    },
    {
      "name": "Isaac Durazo",
      "email": "<isaacdurazo@gmail.com"
    },
    {
      "name": "Pawel Szymczykowski",
      "email": "<makenai@gmail.com"
    },
    {
      "name": "Alex Crooks",
      "email": "<alexcrooks@gmail.com"
    },
    {
      "name": "Donovan Buck",
      "email": "<donovan@donovan.bz"
    },
    {
      "name": "Taha Hesham",
      "email": "<taha@wizylabs.com"
    },
    {
      "name": "Alfonso de la Osa",
      "email": "<fonz@botverse.com"
    },
    {
      "name": "Donald Averill",
      "email": "<donaldaverill@nakedcitybrewing.com"
    },
    {
      "name": "Bryan Hughes",
      "email": "<bryan@theoreticalideations.com"
    },
    {
      "name": "Robert Myers",
      "email": "<rmyers@euro-pro.com"
    },
    {
      "name": "David Resseguie",
      "email": "<david@resseguie.com"
    },
    {
      "name": "Lyza Danger Gardner",
      "email": "<lyza@lyza.com"
    },
    {
      "name": "Adam Magaluk",
      "email": "<AdamMagaluK@gmail.com"
    },
    {
      "name": "Udo Kramer",
      "email": "<optikfluffel@gmail.com"
    },
    {
      "name": "Joseph Weakley",
      "email": "<joew@samjoe.com"
    },
    {
      "name": "Dean McDonnell",
      "email": "<mcdonnelldean@outlook.com"
    },
    {
      "name": "Jonathan Petitcolas",
      "email": "<petitcolas.jonathan@gmail.com"
    },
    {
      "name": "Chinmay Pendharkar",
      "email": "<notthetup@gmail.com"
    },
    {
      "name": "Brian Genisio",
      "email": "<BrianGenisio@Gmail.com"
    },
    {
      "name": "Anna Gerber",
      "email": "<anna.m.gerber@gmail.com"
    },
    {
      "name": "Derek Wheelden",
      "email": "<derek.wheelden@gmail.com"
    },
    {
      "name": "Sean Hussey",
      "email": "<sean@seanhussey.com"
    },
    {
      "name": "ralphtheninja",
      "email": "<ralphtheninja@riseup.net"
    },
    {
      "name": "SotirisValogiannis",
      "email": "<omiloparmenos@gmail.com"
    },
    {
      "name": "Sue Lockwood",
      "email": "<deathbearbrown@gmail.com"
    },
    {
      "name": "Henri Cavalcante",
      "email": "<contato@henrimichel.com.br"
    },
    {
      "name": "Dany Shaanan",
      "email": "<danyshaanan@gmail.com"
    },
    {
      "name": "Rachel Hazes",
      "email": "<"
    },
    {
      "name": "DeShawn Williams",
      "email": "<deshawn.b.williams@gmail.com"
    }
  ],
  "keywords": [
    "arduino",
    "raspberrypi",
    "usb",
    "serial",
    "serialport",
    "firmata",
    "robot",
    "spark",
    "spark core",
    "spark-io",
    "raspberrypi",
    "raspberry pi",
    "rpi",
    "raspi-io",
    "intel galileo",
    "galileo",
    "galileo-io"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/rwaldron/johnny-five.git"
  },
  "bugs": {
    "url": "https://github.com/rwaldron/johnny-five/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rwaldron/johnny-five/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/johnny-five",
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "color-convert": "~0.5.2",
    "chalk": "latest",
    "descriptor": "latest",
    "ease-component": "latest",
    "es6-shim": "latest",
    "lodash": "latest",
    "nanotimer": "0.3.1",
    "temporal": "latest",
    "array-includes": "latest",
    "firmata": ">=0.2.9",
    "serialport": "latest",
    "galileo-io": "latest"
  },
  "optionalDependencies": {
    "firmata": ">=0.2.9",
    "serialport": "latest",
    "galileo-io": "latest"
  },
  "devDependencies": {
    "async": "~0.9.0",
    "board-io": "latest",
    "copy-paste": "~0.3.0",
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-jsbeautifier": "~0.2.2",
    "grunt-jscs": "~0.8.0",
    "keypress": "latest",
    "optimist": "~0.6.1",
    "shelljs": "^0.3.0",
    "sinon": "~1.10.2"
  },
  "scripts": {
    "test": "grunt"
  },
  "browser": {
    "galileo-io": false
  },
  "readme": "<!-- \r\n\r\n    Hello!\r\n\r\n    Please don't edit this file!\r\n\r\n    If you'd like to make changes to the readme contents, please make them in the tpl/.readme.md file. If you'd like to add an example, please put the file in eg/ and then add an entry to programs.json. To generate the markdown and update the main readme, run: \r\n\r\n    `grunt examples`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n-->\r\n<img src=\"https://github.com/rwaldron/johnny-five/raw/master/assets/sgier-johnny-five.png\">\r\n\r\n# Johnny-Five\r\n### The JavaScript Robotics Programming Framework\r\n\r\n_Artwork by [Mike Sgier](http://msgierillustration.com)_\r\n\r\n[![Build Status](https://travis-ci.org/rwaldron/johnny-five.svg?branch=master)](https://travis-ci.org/rwaldron/johnny-five) [![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/rwaldron/johnny-five?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n\r\n\r\n**Johnny-Five is an Open Source, Firmata Protocol based, IoT and Robotics programming framework, developed at [Bocoup](http://bocoup.com). Johnny-Five programs can be written for Arduino (all models), Electric Imp, Beagle Bone, Intel Galileo & Edison, Linino One, Pinoccio, pcDuino3, Raspberry Pi, Spark Core, TI Launchpad and more!**\r\n\r\nJohnny-Five has grown from a passion project into a tool for inspiring learning and creativity for people of all ages, backgrounds, and from all across the world. \r\n\r\nJust interested in learning and building awesome things? You might want to start with the official [Johnny-Five website](http://johnny-five.io). The website combines content from this repo, the wiki, tutorials from the Bocoup blog and several third-party websites into a single, easily-discoverable source:\r\n\r\n* If you want to find the API documentation, [that’s right here](http://johnny-five.io/api/).\r\n* Need to figure out what platform to use for a project? We put that stuff [here](http://johnny-five.io/platform-support/).\r\n* Need inspiration for your next NodeBot? Check out the [examples](http://johnny-five.io/examples/).\r\n* Want to stay up-to-date with projects in the community? [Check this out](http://johnny-five.io/articles/).\r\n* Need NodeBots community or Johnny-Five project updates and announcements? [This](http://johnny-five.io/news/) is what you’re looking for.\r\n\r\n\r\nJohnny-Five does not attempt to provide \"all the things\", but instead focuses on delivering robust, reality tested, highly composable APIs that behave consistently across all supported hardware platforms. Johnny-Five wants to be a baseline control kit for hardware projects, allowing you the freedom to build, grow and experiment with diverse JavaScript libraries of your own choice. Johnny-Five couples comfortably with:\r\n\r\n- Popular application libraries such as [Express.js](http://expressjs.com/) and [Socket.io](http://socket.io/).\r\n- Fellow hardware projects like [ar-drone](https://github.com/felixge/node-ar-drone), [Aerogel](https://github.com/ceejbot/aerogel) and [Spheron](https://github.com/alchemycs/spheron)\r\n- Bluetooth game controllers like [XBox Controller](https://github.com/andrew/node-xbox-controller) and [DualShock](https://github.com/rdepena/node-dualshock-controller)\r\n- IoT frameworks, such as [Octoblu](http://www.octoblu.com/)\r\n\r\n...And that's only a few of the many explorable possibilities. Check out these exciting projects: [node-pulsesensor](https://www.npmjs.org/package/node-pulsesensor), [footballbot-workshop-ui](https://www.npmjs.org/package/footballbot-workshop-ui), [nodebotui](https://www.npmjs.org/package/nodebotui), [dublin-disco](https://www.npmjs.org/package/dublin-disco), [node-slot-car-bot](https://www.npmjs.org/package/node-slot-car-bot), [servo-calibrator](https://www.npmjs.org/package/servo-calibrator), [node-ardx](https://www.npmjs.org/package/node-ardx), [nodebot-workshop](https://www.npmjs.org/package/nodebot-workshop), [phone-home](https://www.npmjs.org/package/phone-home), [purple-unicorn](https://www.npmjs.org/package/purple-unicorn), [webduino](https://www.npmjs.org/package/webduino), [leapduino](https://www.npmjs.org/package/leapduino), [lasercat-workshop](https://www.npmjs.org/package/lasercat-workshop), [simplesense](https://www.npmjs.org/package/simplesense), [five-redbot](https://www.npmjs.org/package/five-redbot), [robotnik](https://www.npmjs.org/package/robotnik), [the-blender](https://www.npmjs.org/package/the-blender)\r\n\r\n\r\n**Why JavaScript?**\r\n[NodeBots: The Rise of JavaScript Robotics](http://www.voodootikigod.com/nodebots-the-rise-of-js-robotics)\r\n\r\n## Hello Johnny\r\n\r\nThe ubiquitous \"Hello World\" program of the microcontroller and SoC world is \"blink an LED\". The following code demonstrates how this is done using the Johnny-Five framework.\r\n\r\n```javascript\r\nvar five = require(\"johnny-five\");\r\nvar board = new five.Board();\r\n\r\nboard.on(\"ready\", function() {\r\n  // Create an Led on pin 13\r\n  var led = new five.Led(13);\r\n  // Blink every half second\r\n  led.blink(500); \r\n});\r\n```\r\n\r\n<img src=\"https://github.com/rwaldron/johnny-five/raw/master/assets/led-blink.gif\">\r\n\r\n> Note: Node will crash if you try to run johnny-five in the node REPL, but board instances will create their own contextual REPL. Put your script in a file.\r\n\r\n\r\n## Supported Hardware\r\n\r\nJohnny-Five has been tested on a variety of Arduino-compatible [Boards](https://github.com/rwaldron/johnny-five/wiki/Board).\r\n\r\nFor non-Arduino based projects, a number of platform-specific [IO Plugins](https://github.com/rwaldron/johnny-five/wiki/IO-Plugins) are available. IO Plugins allow Johnny-Five code to communicate with any non-Arduino based hardware in whatever language that platforms speaks!\r\n\r\n## Documentation\r\n\r\nDocumentation for the Johnny-Five API can be found [here](http://johnny-five.io/api/) and [example programs here](http://johnny-five.io/examples/).\r\n\r\n## Guidance\r\n\r\nNeed help? Ask a question on the [NodeBots Community Forum](http://forums.nodebots.io). If you just have a quick question or are interested in ongoing design discussions, join us in the [Johnny-Five Gitter Chat](https://gitter.im/rwaldron/johnny-five).\r\n\r\nFor step-by-step examples, including an electronics primer, check out [Arduino Experimenter's Guide for NodeJS](http://node-ardx.org/) by [@AnnaGerber](https://twitter.com/AnnaGerber)\r\n\r\nHere is a list of [prerequisites](https://github.com/rwaldron/johnny-five/wiki/Prerequites) for Linux, OSX or Windows.\r\n\r\nCheck out the [bluetooth guide](https://github.com/rwaldron/johnny-five/wiki/JY-MCU-Bluetooth-Serial-Port-Module-Notes) if you want to remotely control your robot.\r\n\r\n## Setup and Assemble Arduino\r\n\r\n- Recommended Starting Kit: [Sparkfun Inventor's Kit](https://www.sparkfun.com/products/12001)\r\n- Download [Arduino IDE](http://arduino.cc/en/main/software)\r\n- Plug in your Arduino or Arduino compatible microcontroller via USB\r\n- Open the Arduino IDE, select: File > Examples > Firmata > StandardFirmata\r\n- Click the \"Upload\" button.\r\n\r\nIf the upload was successful, the board is now prepared and you can close the Arduino IDE.\r\n\r\nFor non-Arduino projects, each IO Plugin's repo will provide its own platform specific setup instructions.\r\n\r\n\r\n## Hey you, here's Johnny!\r\n\r\n#### Source Code:\r\n\r\n``` bash\r\ngit clone git://github.com/rwaldron/johnny-five.git && cd johnny-five\r\n\r\nnpm install\r\n```\r\n\r\n#### npm package:\r\n\r\nInstall the module with:\r\n\r\n```bash\r\nnpm install johnny-five\r\n```\r\n\r\n\r\n## Example Programs\r\n\r\nTo get you up and running quickly, we provide a variety of examples for using each Johnny-Five component. One thing we’re especially excited about is the extensive collection of [Fritzing](http://fritzing.org/home/) diagrams you’ll find throughout the site. A huge part of doing any Johnny-Five project is handling the actual hardware, and we’ve included these as part of the documentation because we realised that instructions on how to write code to control a servo are insufficient without instructions on how to connect a servo!\r\n\r\nTo interactively navigate the examples, visit the [Johnny-Five examples](http://johnny-five.io/examples/) page on the official website. If you want to link directly to the examples in this repo, you can use one of the following links.\r\n\r\n<!--extract-start:examples-->\r\n\r\n### Board\r\n- [Basic Board initialization](https://github.com/rwaldron/johnny-five/blob/master/docs/board.md)\r\n- [Board - Specify port](https://github.com/rwaldron/johnny-five/blob/master/docs/board-with-port.md)\r\n- [Board - Multiple in one program](https://github.com/rwaldron/johnny-five/blob/master/docs/board-multi.md)\r\n- [REPL](https://github.com/rwaldron/johnny-five/blob/master/docs/repl.md)\r\n- [Pin](https://github.com/rwaldron/johnny-five/blob/master/docs/pin.md)\r\n\r\n### LED\r\n- [LED](https://github.com/rwaldron/johnny-five/blob/master/docs/led.md)\r\n- [LED - PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/led-PCA9685.md)\r\n- [LED - Blink](https://github.com/rwaldron/johnny-five/blob/master/docs/led-blink.md)\r\n- [LED - Pulse](https://github.com/rwaldron/johnny-five/blob/master/docs/led-pulse.md)\r\n- [LED - Fade](https://github.com/rwaldron/johnny-five/blob/master/docs/led-fade.md)\r\n- [LED - Fade callback](https://github.com/rwaldron/johnny-five/blob/master/docs/led-fade-callback.md)\r\n- [LED - Demo sequence](https://github.com/rwaldron/johnny-five/blob/master/docs/led-demo-sequence.md)\r\n- [LED - Slider](https://github.com/rwaldron/johnny-five/blob/master/docs/led-slider.md)\r\n- [LED - Array](https://github.com/rwaldron/johnny-five/blob/master/docs/led-array.md)\r\n- [LED - RGB](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rgb.md)\r\n- [LED - RGB (Common Anode)](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rgb-anode.md)\r\n- [LED - RGB PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rgb-PCA9685.md)\r\n- [LED - Rainbow](https://github.com/rwaldron/johnny-five/blob/master/docs/led-rainbow.md)\r\n- [LED - Digital Clock](https://github.com/rwaldron/johnny-five/blob/master/docs/led-digits-clock.md)\r\n- [LED - Matrix](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix.md)\r\n- [LED - Matrix Demo](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix-tutorial.md)\r\n- [LED - Matrix HT16K33](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix-HT16K33.md)\r\n- [LED - Matrix HT16K33 16x8](https://github.com/rwaldron/johnny-five/blob/master/docs/led-matrix-HT16K33-16x8.md)\r\n\r\n### Servo\r\n- [Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/servo.md)\r\n- [Servo - PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-PCA9685.md)\r\n- [Servo - Continuous](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-continuous.md)\r\n- [Servo - Slider control](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-slider.md)\r\n- [Servo - Prompt](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-prompt.md)\r\n- [Servo - Drive](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-drive.md)\r\n- [Servo - Sweep](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-sweep.md)\r\n- [Servo - Array of servos](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-array.md)\r\n\r\n### Servo Animation\r\n- [Servo - Animation](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-animation.md)\r\n- [Servo - Leg Animation](https://github.com/rwaldron/johnny-five/blob/master/docs/servo-animation-leg.md)\r\n\r\n### Motor\r\n- [Motor](https://github.com/rwaldron/johnny-five/blob/master/docs/motor.md)\r\n- [Motor - Directional](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-directional.md)\r\n- [Motor - Brake](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-brake.md)\r\n- [Motor - Current](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-current.md)\r\n- [Motor - H-Bridge](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-hbridge.md)\r\n- [Motor - PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-PCA9685.md)\r\n- [Motor - 3 pin](https://github.com/rwaldron/johnny-five/blob/master/docs/motor-3-pin.md)\r\n\r\n### Stepper Motor\r\n- [Stepper - Driver](https://github.com/rwaldron/johnny-five/blob/master/docs/stepper-driver.md)\r\n- [Stepper - Sweep](https://github.com/rwaldron/johnny-five/blob/master/docs/stepper-sweep.md)\r\n\r\n### ESC & Brushless Motor\r\n- [ESC - Keypress](https://github.com/rwaldron/johnny-five/blob/master/docs/esc-keypress.md)\r\n- [ESC - Dualshock](https://github.com/rwaldron/johnny-five/blob/master/docs/esc-dualshock.md)\r\n- [ESC - PCA9685](https://github.com/rwaldron/johnny-five/blob/master/docs/esc-PCA9685.md)\r\n- [ESC - Bidirectional](https://github.com/rwaldron/johnny-five/blob/master/docs/esc-bidirectional.md)\r\n- [ESC - Bidirectional Forward-Reverse](https://github.com/rwaldron/johnny-five/blob/master/docs/esc-bidirectional-forward-reverse.md)\r\n\r\n### Sonar/Ultrasonic\r\n- [Ping](https://github.com/rwaldron/johnny-five/blob/master/docs/ping.md)\r\n- [Sonar](https://github.com/rwaldron/johnny-five/blob/master/docs/sonar.md)\r\n- [Sonar - Scanner](https://github.com/rwaldron/johnny-five/blob/master/docs/sonar-scan.md)\r\n- [Sonar - I2C SRF10](https://github.com/rwaldron/johnny-five/blob/master/docs/sonar-srf10.md)\r\n\r\n### Button / Switch\r\n- [Button](https://github.com/rwaldron/johnny-five/blob/master/docs/button.md)\r\n- [Button - Bumper](https://github.com/rwaldron/johnny-five/blob/master/docs/button-bumper.md)\r\n- [Button - Options](https://github.com/rwaldron/johnny-five/blob/master/docs/button-options.md)\r\n- [Button - Pullup](https://github.com/rwaldron/johnny-five/blob/master/docs/button-pullup.md)\r\n- [Toggle Switch](https://github.com/rwaldron/johnny-five/blob/master/docs/toggle-switch.md)\r\n\r\n### Relay\r\n- [Relay](https://github.com/rwaldron/johnny-five/blob/master/docs/relay.md)\r\n\r\n### Shift Register\r\n- [Shift Register](https://github.com/rwaldron/johnny-five/blob/master/docs/shift-register.md)\r\n- [Shift Register - Seven segment controller](https://github.com/rwaldron/johnny-five/blob/master/docs/shift-register-seven-segment.md)\r\n- [Shift Register - Seven segments, daisy chained](https://github.com/rwaldron/johnny-five/blob/master/docs/shift-register-daisy-chain.md)\r\n\r\n### Infrared (Proximity, Motion, Reflectance)\r\n- [IR Motion](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-motion.md)\r\n- [IR Proximity](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-proximity.md)\r\n- [IR Reflectance](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-reflect.md)\r\n- [IR Reflectance Array](https://github.com/rwaldron/johnny-five/blob/master/docs/ir-reflect-array.md)\r\n\r\n### Joystick\r\n- [Joystick](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick.md)\r\n- [Joystick - Claw control](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick-claw.md)\r\n- [Joystick - Pan + Tilt control](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick-pantilt.md)\r\n- [Joystick - Motor control](https://github.com/rwaldron/johnny-five/blob/master/docs/joystick-motor-led.md)\r\n\r\n### LCD\r\n- [LCD](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd.md)\r\n- [LCD - Enumerate characters](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-enumeratechars.md)\r\n- [LCD - Runner 20x4](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-runner-20x4.md)\r\n- [LCD - Runner 16x2](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-runner.md)\r\n- [LCD - I2C](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-i2c.md)\r\n- [LCD - I2C PCF8574](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-i2c-PCF8574.md)\r\n- [LCD - I2C Runner](https://github.com/rwaldron/johnny-five/blob/master/docs/lcd-i2c-runner.md)\r\n\r\n### Compass/Magnetometer\r\n- [Compass / Magnetometer](https://github.com/rwaldron/johnny-five/blob/master/docs/magnetometer.md)\r\n- [Compass - HMC6352](https://github.com/rwaldron/johnny-five/blob/master/docs/compass-hmc6352.md)\r\n- [Compass - HMC5883L](https://github.com/rwaldron/johnny-five/blob/master/docs/compass-hmc5883l.md)\r\n- [Compass - Logger](https://github.com/rwaldron/johnny-five/blob/master/docs/magnetometer-log.md)\r\n- [Compass - Find north](https://github.com/rwaldron/johnny-five/blob/master/docs/magnetometer-north.md)\r\n\r\n### Piezo\r\n- [Piezo](https://github.com/rwaldron/johnny-five/blob/master/docs/piezo.md)\r\n\r\n### IMU\r\n- [IMU - MPU6050](https://github.com/rwaldron/johnny-five/blob/master/docs/imu-mpu6050.md)\r\n\r\n### Sensors\r\n- [Sensor](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor.md)\r\n- [Sensor - Slide potentiometer](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor-slider.md)\r\n- [Sensor - Force sensitive resistor](https://github.com/rwaldron/johnny-five/blob/master/docs/sensor-fsr.md)\r\n- [Sensor - Photoresistor](https://github.com/rwaldron/johnny-five/blob/master/docs/photoresistor.md)\r\n- [Sensor - Potentiometer](https://github.com/rwaldron/johnny-five/blob/master/docs/potentiometer.md)\r\n- [Accelerometer](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer.md)\r\n- [Accelerometer - ADXL345](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-adxl345.md)\r\n- [Accelerometer - ADXL335](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-adxl335.md)\r\n- [Accelerometer - MMA7361](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-mma7361.md)\r\n- [Accelerometer - MPU6050](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-mpu6050.md)\r\n- [Accelerometer - Pan + Tilt](https://github.com/rwaldron/johnny-five/blob/master/docs/accelerometer-pan-tilt.md)\r\n- [Gyro](https://github.com/rwaldron/johnny-five/blob/master/docs/gyro.md)\r\n- [Gyro - Analog LPR5150AL](https://github.com/rwaldron/johnny-five/blob/master/docs/gyro-lpr5150l.md)\r\n- [Gyro - I2C MPU6050](https://github.com/rwaldron/johnny-five/blob/master/docs/gyro-mpu6050.md)\r\n- [Temperature - TMP36](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-tmp36.md)\r\n- [Temperature - LM35](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-lm35.md)\r\n- [Temperature - DS18B20](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-ds18b20.md)\r\n- [Temperature - MPU6050](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-mpu6050.md)\r\n\r\n### Grove IoT Kit (Seeed Studio)\r\n- [Grove - LED](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-led.md)\r\n- [Grove - Button](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-button.md)\r\n- [Grove - Touch](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-touch.md)\r\n- [Grove - Sensor](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-sensor.md)\r\n- [Grove - LCD RGB](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-lcd-rgb.md)\r\n- [Grove - LCD RGB temperature display](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-lcd-rgb-temperature-display.md)\r\n- [Grove - Servo](https://github.com/rwaldron/johnny-five/blob/master/docs/grove-servo.md)\r\n\r\n### TinkerKit\r\n- [TinkerKit - Accelerometer](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-accelerometer.md)\r\n- [TinkerKit - Blink](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-blink.md)\r\n- [TinkerKit - Button](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-button.md)\r\n- [TinkerKit - Continuous servo](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-continuous-servo.md)\r\n- [TinkerKit - Combo](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-combo.md)\r\n- [TinkerKit - Gyro](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-gyroscope.md)\r\n- [TinkerKit - Joystick](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-joystick.md)\r\n- [TinkerKit - Linear potentiometer](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-linear-pot.md)\r\n- [TinkerKit - Rotary potentiometer](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-rotary.md)\r\n- [TinkerKit - Temperature](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-thermistor.md)\r\n- [TinkerKit - Tilt](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-tilt.md)\r\n- [TinkerKit - Touch](https://github.com/rwaldron/johnny-five/blob/master/docs/tinkerkit-touch.md)\r\n\r\n### Wii\r\n- [Wii Nunchuck](https://github.com/rwaldron/johnny-five/blob/master/docs/nunchuk.md)\r\n- [Wii Classic Controller](https://github.com/rwaldron/johnny-five/blob/master/docs/classic-controller.md)\r\n\r\n### Complete Bots / Projects\r\n- [Line Follower](https://github.com/rwaldron/johnny-five/blob/master/docs/line-follower.md)\r\n- [Motobot](https://github.com/rwaldron/johnny-five/blob/master/docs/motobot.md)\r\n- [Navigator](https://github.com/rwaldron/johnny-five/blob/master/docs/navigator.md)\r\n- [Nodebot](https://github.com/rwaldron/johnny-five/blob/master/docs/nodebot.md)\r\n- [Whisker](https://github.com/rwaldron/johnny-five/blob/master/docs/whisker.md)\r\n- [Phoenix Hexapod](https://github.com/rwaldron/johnny-five/blob/master/docs/phoenix.md)\r\n- [BOE Bot](https://github.com/rwaldron/johnny-five/blob/master/docs/boe-test-servos.md)\r\n- [Bug](https://github.com/rwaldron/johnny-five/blob/master/docs/bug.md)\r\n- [Lynxmotion Biped BRAT](https://github.com/rwaldron/johnny-five/blob/master/docs/brat.md)\r\n- [Robotic Claw](https://github.com/rwaldron/johnny-five/blob/master/docs/claw.md)\r\n- [Kinect Arm Controller](https://github.com/rwaldron/johnny-five/blob/master/docs/kinect-arm-controller.md)\r\n- [Laser Trip Wire](https://github.com/rwaldron/johnny-five/blob/master/docs/laser-trip-wire.md)\r\n- [Radar](https://github.com/rwaldron/johnny-five/blob/master/docs/radar.md)\r\n\r\n### Component Plugin Template\r\n- [Example plugin](https://github.com/rwaldron/johnny-five/blob/master/docs/plugin.md)\r\n\r\n### IO Plugins\r\n- [Led Blink on Electric Imp](https://github.com/rwaldron/johnny-five/blob/master/docs/imp-io.md)\r\n- [Led Blink on Spark Core](https://github.com/rwaldron/johnny-five/blob/master/docs/spark-io.md)\r\n- [Led Blink on pcDuino3](https://github.com/rwaldron/johnny-five/blob/master/docs/pcduino-io.md)\r\n- [Led Blink on Intel Galileo Gen 2](https://github.com/rwaldron/johnny-five/blob/master/docs/galileo-io.md)\r\n- [Led Blink on Raspberry Pi](https://github.com/rwaldron/johnny-five/blob/master/docs/raspi-io.md)\r\n- [Led Blink on Intel Edison Arduino Board](https://github.com/rwaldron/johnny-five/blob/master/docs/edison-io-arduino.md)\r\n- [Led Blink on Intel Edison Mini Board](https://github.com/rwaldron/johnny-five/blob/master/docs/edison-io-miniboard.md)\r\n\r\n<!--extract-end:examples-->\r\n\r\n## Many fragments. Some large, some small.\r\n\r\n#### [Wireless Nodebot](http://jsfiddle.net/rwaldron/88M6b/show/light)\r\n#### [Kinect Controlled Robot Arm](http://jsfiddle.net/rwaldron/XMsGQ/show/light/)\r\n#### [Biped Nodebot](http://jsfiddle.net/rwaldron/WZkn5/show/light/)\r\n#### [LCD Running Man](http://jsfiddle.net/rwaldron/xKwaU/show/light/)\r\n#### [Slider Controlled Panning Servo](http://jsfiddle.net/rwaldron/kZakv/show/light/)\r\n#### [Joystick Controlled Laser (pan/tilt) 1](http://jsfiddle.net/rwaldron/HPqms/show/light/)\r\n#### [Joystick Controlled Laser (pan/tilt) 2](http://jsfiddle.net/rwaldron/YHb7A/show/light/)\r\n#### [Joystick Controlled Claw](http://jsfiddle.net/rwaldron/6ZXFe/show/light/)\r\n#### [Robot Claw](http://jsfiddle.net/rwaldron/CFSZJ/show/light/)\r\n#### [Joystick, Motor & Led](http://jsfiddle.net/rwaldron/gADSz/show/light/)\r\n\r\n\r\n\r\n## Make: JavaScript Robotics\r\n\r\n[![](http://ecx.images-amazon.com/images/I/91ae8ZZDQ2L.jpg)](http://shop.oreilly.com/product/0636920031390.do)\r\n\r\n\r\n\r\n\r\n## Contributing\r\nAll contributions must adhere to the [Idiomatic.js Style Guide](https://github.com/rwaldron/idiomatic.js),\r\nby maintaining the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/gruntjs/grunt).\r\n\r\n\r\n## License\r\nCopyright (c) 2012, 2013, 2014 Rick Waldron <waldron.rick@gmail.com>\r\nLicensed under the MIT license.\r\nCopyright (c) 2014, 2015 The Johnny-Five Contributors\r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "gitHead": "f5c47801d44263c408e127f22e3c7398e6381235",
  "_id": "johnny-five@0.8.62",
  "_shasum": "fad6ed768665746ef5e9655709b6032b43adab62",
  "_from": "johnny-five",
  "_resolved": "file:johnny-five"
}
